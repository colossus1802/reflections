>>> When would you want to use a remote repository rather than keeping all your
    work local?

When you are ready to release a set of changes, say for a feature that you've 
been working on, that others may now access, use, and test.

>>> Why might you want to always pull changes manually rather than having Git
    automatically stay up-to-date with your remote repository?

    Many reasons.  One big reason is that you don't want code changes pushed 
    from the GitHub repo to your local code base automatically changing the 
    code that you are in the middle of working on.  You want to have control
    over when that happens...preferably when you are completely done with the
    new feature or bug fix.

>>> Describe the differences between forks, clones, and branches.  When would 
    you use one instead of another?

    Use fork to easily copy a GitHub repo into your GitHub repo.  Clone when
    you are ready to start work on a repo.  Branches when you need to separate
    your work from other ongoing work in the repo.

>>> What is the benefit of having a copy of the last known state of the remote
    stored locally?

    To know whether local and remote up-to-date or if local is ahead on commits
    and to be able to see the diffs between them prior to a "git push".

>>> How would you collaborate without using Git or GitHub?  What would be 
    easier, and what would be harder?

    You could use another source code control system like SVN or CVS.  GitHub
    has built-in collaboration features that would help ease and track the 
    effort.

>>> When would you want to make changes in a separate branch rather than 
    directly in master?  What benefits does each approach have?

    Almost all of the time you'll want to make changes on a branch.  
    Keep your changes separate until they have been peer reviewed and unit 
    tested then merge master into your branch and repeat unit tests.  Finally, 
    merge your updated branch into master for all to use.  Making changes on
    master should be limited to changes that are of an immediate need for all
    to continue work on the master (e.g., changing a common, global system 
    parameter that all need updated immediately).
